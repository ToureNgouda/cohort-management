package sn.edacy.web;


import java.util.ArrayList;
import java.util.List;

import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.enterprise.inject.Model;
import javax.inject.Inject;

import sn.edacy.business.CohortServiceL;
import sn.edacy.business.TalentServiceL;
import sn.edacy.model.Cohort;
import sn.edacy.model.Talent;

@Model
public class TalentBM {
	@EJB
	private TalentServiceL talentServiceL;
	@Inject 
	private CohortServiceL cohortServiceL;  //INJECTION DES DEPENDENCES.
	private Cohort cohort = new Cohort();
	private List<Talent> listTalents=new ArrayList<Talent>();
	
	public Cohort getCohort() {
		return cohort;
	}
	
	public void setCohort(Cohort cohort) {
		this.cohort = cohort;
	}
	public TalentServiceL getTalentServiceL() {
		return talentServiceL;
	}
	public void setTalentServiceL(TalentServiceL talentServiceL) {
		this.talentServiceL = talentServiceL;
	}
	public CohortServiceL getCohortServiceL() {
		return cohortServiceL;
	}
	public void setCohortServiceL(CohortServiceL cohortServiceL) {
		this.cohortServiceL = cohortServiceL;
	}
	private Talent talent= new Talent();
	private List<Cohort> listCohorts =new ArrayList<Cohort>();
	
	public Talent getTalent() {
		return talent;
	}
	public void setTalent(Talent talent) {
		this.talent = talent;
	}
	public List<Cohort> getListCohorts() {
		return listCohorts;
	}
	public void setListCohorts(List<Cohort> listCohorts) {
		this.listCohorts = listCohorts;
	}
	
	@PostConstruct
	public void init() {
		listCohorts =cohortServiceL.getAllCohort();
	}

	public void setCohortBM(Cohort cohort) {
		this.cohort = cohort;
	}
	public void addTalent() {
		talent.setCohort(cohort);
		talent.setAge(talent.getAge());
		talent.setFullName(talent.getFullName());
		talentServiceL.addTalent(talent);
	}
	
	public Talent getTalent(Long idTalent) {
		return talentServiceL.getTalent(idTalent);
	}
	public void updateTalent(Talent t) {
		talentServiceL.updateTalent(t);
	}
	public void DeleteTalent(Long idTalent) {
		talentServiceL.DeleteTalent(idTalent);
	}
	//recupere la liste des talents dans une cohorte
	public List<Talent> getTalents() {
		
		listTalents =talentServiceL.getTalents(cohort.getId());
		return listTalents;
	}

}
